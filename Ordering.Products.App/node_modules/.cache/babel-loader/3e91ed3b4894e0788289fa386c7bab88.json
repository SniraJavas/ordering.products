{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sinikiwe.jumba\\\\Downloads\\\\Ordering.Products\\\\Ordering.Products.App\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sinikiwe.jumba\\\\Downloads\\\\Ordering.Products\\\\Ordering.Products.App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../AppSettings\";\nexport var getAllProducts = function getAllProducts() {\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var rawResponse, content;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rawResponse = fetch(BASE_URL + \"​/Products\", {\n              method: \"GET\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify()\n            });\n            content = rawResponse;\n            return _context.abrupt(\"return\", content);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }))();\n};\nexport var getProductsById = function getProductsById(id) {\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var rawResponse, content;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(BASE_URL + \"​/Products\", {\n              method: \"GET\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: id\n              })\n            });\n\n          case 2:\n            rawResponse = _context2.sent;\n            _context2.next = 5;\n            return rawResponse.json();\n\n          case 5:\n            content = _context2.sent;\n            return _context2.abrupt(\"return\", content);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }))();\n};","map":{"version":3,"sources":["C:\\Users\\sinikiwe.jumba\\Downloads\\Ordering.Products\\Ordering.Products.App\\src\\service\\ServiceApi\\ProductService.js"],"names":["axios","BASE_URL","getAllProducts","rawResponse","fetch","method","headers","Accept","body","JSON","stringify","content","getProductsById","id","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC;AAAA;AAAA,2BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,YAAAA,WADP,GACqBC,KAAK,CAACH,QAAQ,GAAG,YAAZ,EAA0B;AACjDI,cAAAA,MAAM,EAAE,KADyC;AAEjDC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB;AAFT,eAFwC;AAMjDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AAN2C,aAA1B,CAD1B;AASOC,YAAAA,OATP,GASiBR,WATjB;AAAA,6CAUQQ,OAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAYD,CAbM;AAgBP,OAAO,IAAMC,eAAe,GAAI,SAAnBA,eAAmB,CAACC,EAAD,EAAQ;AACpC;AAAA;AAAA,2BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC2BT,KAAK,CAACH,QAAQ,GAAG,YAAZ,EAA0B;AACvDI,cAAAA,MAAM,EAAE,KAD+C;AAEvDC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB;AAFT,eAF8C;AAMvDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBG,gBAAAA,EAAE,EAAGA;AADe,eAAf;AANiD,aAA1B,CADhC;;AAAA;AACOV,YAAAA,WADP;AAAA;AAAA,mBAWuBA,WAAW,CAACW,IAAZ,EAXvB;;AAAA;AAWOH,YAAAA,OAXP;AAAA,8CAYQA,OAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAcD,CAfI","sourcesContent":["import axios from \"axios\";\r\nimport BASE_URL from \"../../AppSettings\";\r\n\r\nexport const getAllProducts = () => {\r\n  (async () => {\r\n    const rawResponse = fetch(BASE_URL + \"​/Products\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(),\r\n    });\r\n    const content = rawResponse;\r\n    return content;\r\n  })();\r\n};\r\n\r\n\r\nexport const getProductsById  = (id) => {\r\n    (async () => {\r\n      const rawResponse = await fetch(BASE_URL + \"​/Products\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n         id : id\r\n        }),\r\n      });\r\n      const content = await rawResponse.json();\r\n      return content;\r\n    })();\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}